name: Android Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip python3-dev build-essential libffi-dev libssl-dev

      - name: Install buildozer
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade buildozer Cython

      - name: Prepare keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p keystore
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > keystore/release.keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Cache buildozer directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      - name: Build debug APK
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          buildozer android debug

      - name: Build release APK
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          buildozer android release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: taikomini-apk
          path: |
            bin/*.apk
            bin/*.aab
