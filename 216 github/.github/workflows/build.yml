name: 🥁 Build TaikoMini Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发
  release:
    types: [ published ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: 🔧 Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y -qq \
          build-essential \
          libssl-dev \
          libffi-dev \
          python3-dev \
          libsqlite3-dev \
          libreadline-dev \
          libbz2-dev \
          libncurses5-dev \
          libgdbm-dev \
          liblzma-dev \
          zlib1g-dev \
          libjpeg-dev \
          libfreetype6-dev \
          liblcms2-dev \
          libopenjp2-7-dev \
          libtiff5-dev \
          tk-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libxcb1-dev \
          git \
          wget \
          unzip
    
    - name: ☕ Set up Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
        cache: 'maven'
    
    - name: 📱 Install Android SDK
      run: |
        echo "📱 Installing Android SDK..."
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p android-sdk/cmdline-tools
        mv cmdline-tools android-sdk/cmdline-tools/latest
        
        export ANDROID_SDK_ROOT=$PWD/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_ENV
        
        # 接受许可证
        yes | sdkmanager --licenses > /dev/null 2>&1
        
        # 安装必要的组件
        sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" > /dev/null 2>&1
        
        echo "✅ Android SDK installed successfully"
    
    - name: 🔨 Install Buildozer
      run: |
        echo "🔨 Installing Buildozer..."
        pip install --upgrade pip
        pip install buildozer cython==0.29.36
        echo "✅ Buildozer installed successfully"
    
    - name: 🏗️ Build Android APK
      run: |
        echo "🏗️ Building Android APK..."
        export ANDROID_SDK_ROOT=$PWD/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        
        # 设置 Buildozer 配置
        export BUILD_DIR=/tmp/.buildozer
        export BIN_DIR=/tmp/bin
        
        # 构建 APK
        buildozer android debug
        
        echo "✅ APK build completed"
        
        # 显示构建结果
        ls -la bin/ || echo "No bin directory found"
        find . -name "*.apk" -type f || echo "No APK files found"
    
    - name: 📦 Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: TaikoMini-APK-v${{ github.run_number }}
        path: |
          bin/*.apk
          *.apk
        retention-days: 30
    
    - name: 🚀 Create Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/*.apk
          *.apk
        draft: false
        prerelease: false
        generate_release_notes: true
    
    - name: 📊 Build Summary
      if: always()
      run: |
        echo "## 🥁 TaikoMini Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 APK Files:" >> $GITHUB_STEP_SUMMARY
        find . -name "*.apk" -type f -exec echo "- {}" \; >> $GITHUB_STEP_SUMMARY || echo "- No APK files found" >> $GITHUB_STEP_SUMMARY
